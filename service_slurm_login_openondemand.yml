#- ansible.builtin.import_playbook: repos_distro_au.yml

- hosts: localhost
  gather_facts: yes

  vars:
    - my_name: "service_slurm_login_openondemand"
    - my_packages_pre:
      - apt-transport-https
      - ca-certificates
      - apache2
      - libapache2-mod-authnz-pam
    - my_packages_ood:
      - ondemand

  tasks:

  - name: "{{ my_name }} install pre-req packages"
    ansible.builtin.apt:
      name: "{{ my_packages_pre }}"
      state: latest
      update_cache: true


  - name: "{{ my_name }} install ood repo"
    ansible.builtin.apt:
      deb: "https://apt.osc.edu/ondemand/4.0/ondemand-release-web_4.0.0-noble_all.deb"
      update_cache: true
    notify: "{{ my_name }} restart apache2"

  - name: "{{ my_name }} remove apache2 default landing page"
    ansible.builtin.file:
      path: /etc/apache2/sites-enabled/000-default.conf
      state: absent

  - name: "{{ my_name }} configure apache authnz-pam"
    ansible.builtin.command:
      cmd: a2enmod authnz_pam
    notify: "{{ my_name }} restart apache2"

  - name: "{{ my_name }} configure apache2-user permissions"
    ansible.builtin.user:
      name: www-data
      groups: shadow,slurm
      append: yes
    ignore_errors: true
    notify: "{{ my_name }} restart apache2"

  - name: "{{ my_name }} configure ood pam auth"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/ood_portal.yml.j2"
      dest: "/etc/ood/config/ood_portal.yml"
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} configure ood pam"
    ansible.builtin.copy:
      src: /etc/pam.d/sshd
      dest: /etc/pam.d/ood
      owner: root
      group: root
      mode: '0644'
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} configure ood clusters"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/slurm-cluster.yml.j2"
      dest: "/etc/ood/config/clusters.d/slurm-cluster.yml"
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} configure app bc_desktop"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/bc_desktop_form.yml.j2"
      dest: "/var/www/ood/apps/sys/bc_desktop/form.yml"
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_tensorflow"
    ansible.builtin.git:
      repo: https://github.com/OSC/bc_example_jupyter.git
      dest: /var/www/ood/apps/sys/bc_jupyter_tensorflow
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_pytorch"
    ansible.builtin.git:
      repo: https://github.com/OSC/bc_example_jupyter.git
      dest: /var/www/ood/apps/sys/bc_jupyter_pytorch
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_tensorflow form.yml"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/bc_jupyter_tensorflow_form.yml.j2"
      dest: "/var/www/ood/apps/sys/bc_jupyter_tensorflow/form.yml"
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_pytorch form.yml"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/bc_jupyter_pytorch_form.yml.j2"
      dest: "/var/www/ood/apps/sys/bc_jupyter_pytorch/form.yml"
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_tensorflow manifest.yml"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/bc_jupyter_tensorflow_manifest.yml.j2"
      dest: "/var/www/ood/apps/sys/bc_jupyter_tensorflow/manifest.yml"
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_pytorch manifest.yml"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/bc_jupyter_pytorch_manifest.yml.j2"
      dest: "/var/www/ood/apps/sys/bc_jupyter_pytorch/manifest.yml"
      owner: root
      group: root
      mode: 0644
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_tensorflow script.sh.erb"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/bc_jupyter_tensorflow_script.sh.erb.j2"
      dest: "/var/www/ood/apps/sys/bc_jupyter_tensorflow/template/script.sh.erb"
      owner: root
      group: root
      mode: 0755
    notify: "{{ my_name }} update ood portal"

  - name: "{{ my_name }} bc_jupyter_pytorch script.sh.erb"
    ansible.builtin.template:
      src: "templates/{{ my_name }}/bc_jupyter_pytorch_script.sh.erb.j2"
      dest: "/var/www/ood/apps/sys/bc_jupyter_pytorch/template/script.sh.erb"
      owner: root
      group: root
      mode: 0755
    notify: "{{ my_name }} update ood portal"

  handlers:

  - name: "{{ my_name }} update apt"
    ansible.builtin.apt:
      update_cache: true

  - name: "{{ my_name }} restart apache2"
    ansible.builtin.service:
      name: apache2
      enabled: yes
      state: restarted

  - name: "{{ my_name }} update ood portal"
    ansible.builtin.command:
      cmd: /opt/ood/ood-portal-generator/sbin/update_ood_portal
    notify: "{{ my_name }} restart apache2"
